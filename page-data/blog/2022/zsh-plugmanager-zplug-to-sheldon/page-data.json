{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2022/zsh-plugmanager-zplug-to-sheldon/","result":{"data":{"markdownRemark":{"id":"8ed53d55-5658-58f1-956a-2e06bb94c751","excerpt":"zsh の起動が遅かったので調べたら zplug のロードに時間がかかってることがわかった。 色々調べた結果 sheldon に乗り換えて、なかなかいい感じ。 sheldon の特徴と感想 ロードは結構速いと思う。参考にしたこの記事では zinit より少しだけ速度が改善したらしい。 僕は zinit…","html":"<p>zsh の起動が遅かったので調べたら zplug のロードに時間がかかってることがわかった。<br>\n色々調べた結果 sheldon に乗り換えて、なかなかいい感じ。</p>\n<h2 id=\"sheldon-の特徴と感想\" style=\"position:relative;\"><a href=\"#sheldon-%E3%81%AE%E7%89%B9%E5%BE%B4%E3%81%A8%E6%84%9F%E6%83%B3\" aria-label=\"sheldon の特徴と感想 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sheldon の特徴と感想</h2>\n<p>ロードは結構速いと思う。<a href=\"https://ktrysmt.github.io/blog/migrate-zinit-to-sheldon/\">参考にしたこの記事</a>では zinit より少しだけ速度が改善したらしい。<br>\n僕は zinit を使ったことないのでわからないけど、ひとまず zplug よりは圧倒的に速い。</p>\n<p>sheldon の特徴として、toml ファイルでのプラグイン管理がある。<br>\nこれがなかなか良い。プラグインの遅延ロード設定も簡単にできるし、ローカルの設定ファイルもプラグインと同じ感覚でロードの設定ができる。<br>\nもちろん、toml だから人間にも読みやすい。</p>\n<h2 id=\"導入手順と基本的な使い方\" style=\"position:relative;\"><a href=\"#%E5%B0%8E%E5%85%A5%E6%89%8B%E9%A0%86%E3%81%A8%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9\" aria-label=\"導入手順と基本的な使い方 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>導入手順と基本的な使い方</h2>\n<p>基本的には<a href=\"https://github.com/rossmacarthur/sheldon\">公式 README</a>読めば ok。<br>\nHomebrew とかで sheldon 入れて、<code>sheldon init</code>を実行、<code>eval \"$(sheldon source)\"</code>を<code>~/.zshrc</code>とかに書けば終了。<br>\nとても簡単。</p>\n<p>設定は<code>~/.sheldon/plugins.toml</code>に記述する。<code>sheldon init</code>を実行すると勝手に作られる。</p>\n<p>アップデートは次のコマンドで実行する。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ sheldon lock --update</span></span></code></pre>\n<p><code>plugin.toml</code>の書き方は<a href=\"https://github.com/rossmacarthur/sheldon#%EF%B8%8F-configuration\">README のここ</a>読めば、だいたいわかる。</p>\n<h2 id=\"dotfiles-で管理する\" style=\"position:relative;\"><a href=\"#dotfiles-%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B\" aria-label=\"dotfiles で管理する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dotfiles で管理する</h2>\n<p>僕は zshrc とかの の管理は dotfiles で行っていて、ファイルの構成は次のようになっている。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"txt\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dotfiles/zsh/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ├ zshrc.zsh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ├ zprofile.zsh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ├ plugin.toml</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ├ defe/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  │ ├ alias.zsh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  │ ├ completion.zsh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  │ └ env-init.zsh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  └ sync/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├ alias.zsh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├ option.zsh</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    └ prompt.zsh</span></span></span></code></pre>\n<p>zshrc.zsh には<code>eval \"$(sheldon source)\"</code>の 1 行しか書いてない。</p>\n<p><code>plugins.toml</code>は次のようになっている。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"toml\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">shell</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;zsh&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">plugins</span><span class=\"mtk1\">.</span><span class=\"mtk12\">zsh-defer</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">github</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;romkatv/zsh-defer&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">apply</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;source&#39;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">templates</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">defer</span><span class=\"mtk1\"> = { </span><span class=\"mtk4\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;zsh-defer source &quot;{{ file }}&quot;&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">each</span><span class=\"mtk1\"> = true }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">plugins</span><span class=\"mtk1\">.</span><span class=\"mtk12\">compinit</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">inline</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;autoload -Uz compinit &amp;&amp; zsh-defer compinit&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">plugins</span><span class=\"mtk1\">.</span><span class=\"mtk12\">colors</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">inline</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;autoload -Uz colors &amp;&amp; zsh-defer colors&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">plugins</span><span class=\"mtk1\">.</span><span class=\"mtk12\">zsh-autosuggestions</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">github</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;zsh-users/zsh-autosuggestions&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">apply</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;defer&#39;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">plugins</span><span class=\"mtk1\">.</span><span class=\"mtk12\">zsh-syntax-highlighting</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">github</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;zsh-users/zsh-syntax-highlighting&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">apply</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;defer&#39;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">plugins</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dotfiles-sync</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">local</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;~/dotfiles/zsh/sync&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">use</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;*.zsh&#39;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">apply</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;source&#39;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">plugins</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dotfiles-defer</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">local</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;~/dotfiles/zsh/defer&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">use</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;*.zsh&#39;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">apply</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;defer&#39;</span><span class=\"mtk1\">]</span></span></span></code></pre>\n<p>少し説明すると、</p>\n<p><code>apply = ['defer']</code> を指定したのは遅延読み込み、<code>apply = ['source']</code>を指定したものは zsh 起動時に読み込まれる。</p>\n<p><code>defer</code>は<code>[template]</code>によって定義されているもので、プラグイン<code>zsh-defer</code>を利用していることがわかる。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"toml\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">templates</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">defer</span><span class=\"mtk1\"> = { </span><span class=\"mtk4\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;zsh-defer source &quot;{{ file }}&quot;&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">each</span><span class=\"mtk1\"> = true }</span></span></span></code></pre>\n<p>自分が書いてる設定ファイルは<code>[plugin-dotfiles-sync]</code>と<code>[plugin-dotfiles-defer]</code>で読み込んでいる。<br>\n<code>sync</code>の方には起動に読み込んでおく必要があるもをおいて、それ以外は<code>defer</code>って感じにしてる。<code>option.zsh</code>は<code>defer</code>にしたかったのだけど、一部オプションは遅延読み込みが上手くいかないっぽい。だからと言って<code>alias.zsh</code>みたいに分離するのも面倒だったので全部<code>sync</code>にしている。</p>\n<p>あと、<code>env-init.zsh</code>には<code>pyenv</code>と<code>rbenv</code>の init を行っている。最適化をしてない場合、zsh 起動時間で<code>○○env</code>の init は大きな時間を占めていると思う(もちろん僕もその 1 人であった)。<br>\n<code>defer</code>を指定するだけでこれが解消されるのは非常に手軽で嬉しい。</p>\n<h2 id=\"速度\" style=\"position:relative;\"><a href=\"#%E9%80%9F%E5%BA%A6\" aria-label=\"速度 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>速度</h2>\n<p>手軽に次のコマンドで測定してみた。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ time ( zsh -i -c exit )</span></span></code></pre>\n<p><code>zplug</code>の時の速度を測りたかったのだけど「zplug コマンドが見つからない」エラーが出て、ちゃんと計測できなかったので、<a href=\"https://qiita.com/vintersnow/items/7343b9bf60ea468a4180#%E3%83%97%E3%83%AD%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\">ここの方法</a>を参考にプロファイルをとってみた。その結果、<code>zplug</code>と名前のついた処理についてだけで 800ms を超える時間がかかっていた(2018 年 macbook pro)。</p>\n<p><code>sheldon</code>に乗り換えて、10 数回ほど計測した結果、2018 年 macbook pro では 50ms ほど、2021 年 macbook pro では 40ms ほどであった。</p>\n<p>素晴らしい。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://ktrysmt.github.io/blog/migrate-zinit-to-sheldon/\">zinit が不安なので sheldon へ移行したら zsh の起動が 50ms と更に速くなった</a></li>\n<li><a href=\"https://sheldon.cli.rs/Introduction.html\">sheldon docs</a></li>\n<li><a href=\"https://github.com/rossmacarthur/sheldon\">rossmacarthur/sheldon (github)</a></li>\n<li><a href=\"https://qiita.com/vintersnow/items/7343b9bf60ea468a4180#%25E3%2583%2597%25\">zsh の起動が遅いのでなんとかしたい</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"zplugからsheldonに乗り換えた","postdate":"2022/06/03 (18:33)","update":"2022/06/04 (00:18)","tags":["Zsh"]}},"previous":{"fields":{"slug":"/blog/2022/vim-latex-fix-punctuation/"},"frontmatter":{"title":"[Vim] latexで保存時に句読点をカンマ・ピリオドに修正する"}},"next":null},"pageContext":{"id":"8ed53d55-5658-58f1-956a-2e06bb94c751","previousPostId":"c162e9bb-c27a-5a6f-b436-856e69d7419c","nextPostId":null}},"staticQueryHashes":["1334514254","1725242874"]}