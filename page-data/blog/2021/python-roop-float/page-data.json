{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2021/python-roop-float/","result":{"data":{"markdownRemark":{"id":"9c1e86f4-b7c6-5c88-8257-9f2a020d2ada","excerpt":"range の第 3 引数で小数を指定したいと思ったので、いい感じになるように頑張った記録を残しておきます。 どんなのができたか 区間[1, 5)を 1.021 刻みでループするコードは以下になります。 Range の実装 先に実装を載せておきます。 配列(list…","html":"<p>range の第 3 引数で小数を指定したいと思ったので、いい感じになるように頑張った記録を残しておきます。</p>\n<h2 id=\"どんなのができたか\" style=\"position:relative;\"><a href=\"#%E3%81%A9%E3%82%93%E3%81%AA%E3%81%AE%E3%81%8C%E3%81%A7%E3%81%8D%E3%81%9F%E3%81%8B\" aria-label=\"どんなのができたか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>どんなのができたか</h2>\n<p>区間[1, 5)を 1.021 刻みでループするコードは以下になります。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> Range(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;1.021&quot;</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">print</span><span class=\"mtk1\">(i)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">1.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">2.021</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">3.042</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">4.063</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;&quot;&quot;</span></span></span></code></pre>\n<h2 id=\"range-の実装\" style=\"position:relative;\"><a href=\"#range-%E3%81%AE%E5%AE%9F%E8%A3%85\" aria-label=\"range の実装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Range の実装</h2>\n<p>先に実装を載せておきます。<br>\n配列(list)を使わずに実装してます。<br>\n次の「<a href=\"#toc_headline_3\">説明</a>」から読んだ方がいいかもです。</p>\n<p>ちょっと長いですが、複数の引数パターンを作るためのただの if 文です。<br>\nあと、例外処理はしてないです。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"python\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">from</span><span class=\"mtk1\"> collections.abc </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> Sequence</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk10\">Sequence</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">def</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__init__</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, *</span><span class=\"mtk12\">args</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(args) == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = </span><span class=\"mtk8\">&#39;1&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">elif</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(args) == </span><span class=\"mtk7\">2</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isinstance</span><span class=\"mtk1\">(args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk10\">int</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = </span><span class=\"mtk8\">&#39;1&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">elif</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(args) == </span><span class=\"mtk7\">3</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = args[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TypeError</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        dot = </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step.find(</span><span class=\"mtk8\">&#39;.&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> dot != -</span><span class=\"mtk7\">1</span><span class=\"mtk1\">: dot = </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step) - (dot+</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\">: dot = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**dot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._rp = </span><span class=\"mtk10\">int</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step.replace(</span><span class=\"mtk8\">&#39;.&#39;</span><span class=\"mtk1\">,</span><span class=\"mtk8\">&#39;&#39;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">def</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__getitem__</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">index</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> index &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">: index += </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ret = (</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start*</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep)+(index*</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._rp)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ret /= </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ret &gt;= </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end: </span><span class=\"mtk15\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IndexError</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> ret</span></span></span></code></pre>\n<h2 id=\"説明\" style=\"position:relative;\"><a href=\"#%E8%AA%AC%E6%98%8E\" aria-label=\"説明 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>説明</h2>\n<p>第 3 引数を浮動小数点ではなく文字列にすることで分数のように扱い、誤差を減らしています。<br>\n実行速度は range の 4 倍程度でした。(AtCoder のコードテストで測定)<br>\n引数の取り方は 4 種類想定しています。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"python\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Range(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Range(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Range(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0.1&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Range(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0.1&quot;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"内部処理について\" style=\"position:relative;\"><a href=\"#%E5%86%85%E9%83%A8%E5%87%A6%E7%90%86%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-label=\"内部処理について permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内部処理について</h3>\n<h4>__init__(self)</h4>\n<p>イニシャライザではまず、4 つの引数パターンをカバーするための分岐をします。<br>\nここはコード読んでください。</p>\n<p>続いて<code>step</code>を解析します。<br>\n具体例から、</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"txt\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">0.1 -&gt; 1 / 10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">0.25 -&gt; 25 / 100</span></span></span></code></pre>\n<p>と言った感じで 10 の累乗の分数にしてそれぞれ分子の値を<code>_rp</code>、分母の値を<code>_ep</code>に保存します。</p>\n<p>該当部分にコメントを追加して再掲</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"python\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 小数点の位置を取得</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dot = </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step.find(</span><span class=\"mtk8\">&#39;.&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 未発見の場合は0に</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># 発見したら小数点以下の桁数に変換する</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> dot != -</span><span class=\"mtk7\">1</span><span class=\"mtk1\">: dot = </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step) - (dot+</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">else</span><span class=\"mtk1\">: dot = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># _epには分母(10^{小数点以下の桁数})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**dot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># _rpには分子(小数点を取り除いてintに変換)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">self</span><span class=\"mtk1\">._rp = </span><span class=\"mtk10\">int</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step.replace(</span><span class=\"mtk8\">&#39;.&#39;</span><span class=\"mtk1\">,</span><span class=\"mtk8\">&#39;&#39;</span><span class=\"mtk1\">))</span></span></span></code></pre>\n<h4>__getitem__(self, index)</h4>\n<p>インデックスアクセスを定義します。<br>\n例えば Range(1, 2, 0.2) の 1 番目は 1.0、2 番は 1.2、3 番目は 1.4 という感じです。</p>\n<p>誤差を減らすために除算を最後に行います。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"python\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">def</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__getitem__</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">index</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\"># 負のとき</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> index &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">: index += </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\"># 分子を計算</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ret = (</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start*</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep)+(index*</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._rp)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\"># 分母で割る</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ret /= </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\"># 終了値以上であったらエラーを出すとforを抜ける</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ret &gt;= </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end: </span><span class=\"mtk15\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IndexError</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> ret</span></span></span></code></pre>\n<h2 id=\"補足\" style=\"position:relative;\"><a href=\"#%E8%A3%9C%E8%B6%B3\" aria-label=\"補足 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>補足</h2>\n<p>本題はここまでです。ちょっとした補足をします。</p>\n<h3 id=\"速度計測\" style=\"position:relative;\"><a href=\"#%E9%80%9F%E5%BA%A6%E8%A8%88%E6%B8%AC\" aria-label=\"速度計測 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>速度計測</h3>\n<p>ACoder のコードテストを使いました。</p>\n<details>\n  <summary>使用したコード[開く]</summary>\n<pre class=\"grvsc-container default-dark\" data-language=\"python\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">from</span><span class=\"mtk1\"> collections.abc </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> Sequence</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> time</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk10\">Sequence</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">def</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__init__</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, *</span><span class=\"mtk12\">args</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(args) == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = </span><span class=\"mtk8\">&#39;1&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">elif</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(args) == </span><span class=\"mtk7\">2</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isinstance</span><span class=\"mtk1\">(args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk10\">int</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = </span><span class=\"mtk8\">&#39;1&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">elif</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(args) == </span><span class=\"mtk7\">3</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start = args[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end = args[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step = args[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TypeError</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        dot = </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step.find(</span><span class=\"mtk8\">&#39;.&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> dot != -</span><span class=\"mtk7\">1</span><span class=\"mtk1\">: dot = </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step) - (dot+</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\">: dot = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**dot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._rp = </span><span class=\"mtk10\">int</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step.replace(</span><span class=\"mtk8\">&#39;.&#39;</span><span class=\"mtk1\">,</span><span class=\"mtk8\">&#39;&#39;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">def</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__getitem__</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">index</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> index &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">: index += </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ret = (</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start*</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep)+(index*</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._rp)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ret /= </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._ep</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ret &gt;= </span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end: </span><span class=\"mtk15\">raise</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IndexError</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> ret</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">def</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__len__</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        d = (</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._end-</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._start)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">round</span><span class=\"mtk1\">((d/</span><span class=\"mtk10\">float</span><span class=\"mtk1\">(</span><span class=\"mtk4\">self</span><span class=\"mtk1\">._step))+</span><span class=\"mtk7\">0.5</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">start, end = </span><span class=\"mtk11\">map</span><span class=\"mtk1\">(</span><span class=\"mtk10\">int</span><span class=\"mtk1\">, </span><span class=\"mtk11\">input</span><span class=\"mtk1\">().split())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">step = </span><span class=\"mtk11\">input</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">sum</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">s = time.time()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> Range(start, end, step):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">sum</span><span class=\"mtk1\"> += i</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">elapsed_time = time.time() - s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">print</span><span class=\"mtk1\"> (</span><span class=\"mtk8\">&quot;elapsed_time:</span><span class=\"mtk4\">{0}</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\">.format(elapsed_time) + </span><span class=\"mtk8\">&quot;[sec]&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">end *= </span><span class=\"mtk10\">int</span><span class=\"mtk1\">(</span><span class=\"mtk11\">round</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">/</span><span class=\"mtk10\">float</span><span class=\"mtk1\">(step)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">sum</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">s = time.time()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> </span><span class=\"mtk11\">range</span><span class=\"mtk1\">(start, end):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">sum</span><span class=\"mtk1\"> += i</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">elapsed_time2 = time.time() - s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">print</span><span class=\"mtk1\"> (</span><span class=\"mtk8\">&quot;elapsed_time:</span><span class=\"mtk4\">{0}</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\">.format(elapsed_time2) + </span><span class=\"mtk8\">&quot;[sec]&quot;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n</details>\n<p>標準入力には何十通りかやったところ大体速度差が 4 倍程度でした。</p>\n<p>結果一例</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"txt\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">標準入力</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">1 100000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">0.021</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">標準出力</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">elapsed_time:2.1286604404449463[sec]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">elapsed_time:0.5733368396759033[sec]</span></span></span></code></pre>\n<h3 id=\"他の方法との比較\" style=\"position:relative;\"><a href=\"#%E4%BB%96%E3%81%AE%E6%96%B9%E6%B3%95%E3%81%A8%E3%81%AE%E6%AF%94%E8%BC%83\" aria-label=\"他の方法との比較 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>他の方法との比較</h3>\n<p>ネット検索するとよくでてくるやつとの違いです。<br>\nNumPy 使うやり方は<a href=\"https://snowtree-injune.com/2019/07/07/arange-linspace\">これ</a>見てください。誤差でます。</p>\n<p>他にも<code>i</code>に何かを割るとか掛けるとかのやり方があるけど、そもそもスタートがずれるし、誤差でます。こんな感じです。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"python\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> </span><span class=\"mtk11\">range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">5</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    i *= </span><span class=\"mtk7\">1.021</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">print</span><span class=\"mtk1\">(i)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">1.021</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">2.042</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">3.0629999999999997</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">4.084</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">&quot;&quot;&quot;</span></span></span></code></pre>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<p><a href=\"https://qiita.com/tanuk1647/items/6051599e8eeff510a453\">【Python】range を再実装し、計算量について学ぶ</a><br>\n<a href=\"https://qiita.com/fantm21/items/3dc7fbf4e935311488bc\">【Python】処理にかかる時間を計測して表示</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk7 { color: #B5CEA8; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"Pythonのforループでrangeを小数点刻み、かつ誤差を出さないようにする","postdate":"2021/07/31 (15:43)","update":null,"tags":["Python"]}},"previous":{"fields":{"slug":"/blog/2021/dart-exception-error-index/inde/"},"frontmatter":{"title":"[Dart]エラー・例外一覧"}},"next":{"fields":{"slug":"/blog/2021/dart-annotation-index/"},"frontmatter":{"title":"[Dart] meta.dart アノテーション一覧"}}},"pageContext":{"id":"9c1e86f4-b7c6-5c88-8257-9f2a020d2ada","previousPostId":"ed9f0978-ec3b-580f-ad52-766b1fe4a35d","nextPostId":"3571a2a4-3ac6-5dd8-8ee4-b17e800ae0e1"}},"staticQueryHashes":["1334514254","1725242874"]}