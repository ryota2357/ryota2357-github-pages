{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2021/vsmac-create-unity-dll/","result":{"data":{"markdownRemark":{"id":"5a0f176c-c59b-54ca-aedf-0b79ac771105","excerpt":"目標 VisualStudio で UnityEngine 等の Unity 関連ライブラリを参照可能にする。 DLL を作成し、Unity に読み込ませて利用可能にする。 作業 VisualStudio for Mac (バージョン 8.8.…","html":"<h2 id=\"目標\" style=\"position:relative;\"><a href=\"#%E7%9B%AE%E6%A8%99\" aria-label=\"目標 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目標</h2>\n<ul>\n<li>VisualStudio で UnityEngine 等の Unity 関連ライブラリを参照可能にする。</li>\n<li>DLL を作成し、Unity に読み込ませて利用可能にする。</li>\n</ul>\n<h2 id=\"作業\" style=\"position:relative;\"><a href=\"#%E4%BD%9C%E6%A5%AD\" aria-label=\"作業 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>作業</h2>\n<p>VisualStudio for Mac (バージョン 8.8.6) を使っています。</p>\n<h3 id=\"プロジェクトの作成\" style=\"position:relative;\"><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\" aria-label=\"プロジェクトの作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>プロジェクトの作成</h3>\n<p><strong><em>スタートウィンドウ ＞ 新規 ＞ その他 ＞ .Net</em></strong><br>\nより「ライブラリ」というテンプレートがあるので、それを選択します。</p>\n<p>プロジェクト名、ソリューション名は同じで OK です。</p>\n<p>ディレクトリ構成は以下のようになっているかと思います。<br>\n多少異なっていても問題ないです。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"txt\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">TestLibrary/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">└ TestLibrary</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├ 参照/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    │   └ System</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├ パッケージ/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├ Properties/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    │   └ AssemblyInfo.cs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    └MyClass.cs</span></span></span></code></pre>\n<p>必要最小限のもの以外を削除しても構いません。<br>\n削除したいものの上で「右クリック、削除」で削除できます。<br>\n最小限のものだけにすると、以下のようになります。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"txt\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">TestLibrary/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">└ TestLibrary</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├ 参照/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    └ パッケージ/</span></span></span></code></pre>\n<h3 id=\"unityengine-の参照を追加する\" style=\"position:relative;\"><a href=\"#unityengine-%E3%81%AE%E5%8F%82%E7%85%A7%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\" aria-label=\"unityengine の参照を追加する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnityEngine の参照を追加する</h3>\n<p>現在の状態で</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"cs\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">using</span><span class=\"mtk1\"> </span><span class=\"mtk10\">UnityEngine</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>とすると、エラーになります。<br>\nなので、参照を追加します。</p>\n<ol>\n<li>「参照」ディレクトリの上で「右クリック、参照の追加...」を選択</li>\n<li>「.NET アセンブリ ＞ 参照...」</li>\n<li>Finder にて「Shift + ⌘ ＋ G」</li>\n<li><em>/Applications/Unity/Unity.app/Contents/Managed</em> と入力</li>\n<li>「UnityEngine.dll」を開く</li>\n</ol>\n<p>無事に見つかって参照が追加できれば OK ですが、できなかった場合は次の方法で可能かと思われます。</p>\n<ol>\n<li>UnityHub を開いて、右上の歯車マークから「一般 ＞ Unity エディタフォルダー」の場所を確認します。</li>\n<li>VisualStudio「.NET アセンブリ ＞ 参照...」より 1 を参考に「Unity.app」を探します。</li>\n<li>「Shift + ⌘ ＋ G」を押して<em>hoge/Unity.app/Contents/Managed</em>と入力します。(hoge の部分は各自)</li>\n<li>UnityEngine.dll」を開く</li>\n</ol>\n<h3 id=\"コンパイラ設定\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E8%A8%AD%E5%AE%9A\" aria-label=\"コンパイラ設定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンパイラ設定</h3>\n<p>初期のの設定では、DLL にすると XML コメントが表示されないので変更します。</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"txt\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">TestLibrary/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">└ TestLibrary ＜ー 右クリック、オプション</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ├ 参照/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    └ パッケージ/</span></span></span></code></pre>\n<p>オプション ＞ ビルド ＞ コンパイラ ＞ XML ドキュメントを生成する<br>\nにテェックを入れます。<br>\n他にも「オーバーフローチェック」や「最適化を有効」などのオプションがあるので必要に応じて有効にします。</p>\n<h3 id=\"unity-で利用可能にする\" style=\"position:relative;\"><a href=\"#unity-%E3%81%A7%E5%88%A9%E7%94%A8%E5%8F%AF%E8%83%BD%E3%81%AB%E3%81%99%E3%82%8B\" aria-label=\"unity で利用可能にする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity で利用可能にする</h3>\n<ol>\n<li>ビルドします。「⌘ + K」または TestLibrary を右クリックで行います。</li>\n<li>Finder からプロジェクトのディレクトリに移動します。</li>\n<li>Unity のプロジェクトに「Plugins」フォルダを作成し、dll、pdb、xml を入れます。</li>\n</ol>\n<pre class=\"grvsc-container default-dark\" data-language=\"txt\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">TestLibrary/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">├ bin/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│   └ Debug</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│       ├ TestLibrary.dll</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│       ├ TestLibrary.pdb</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">│       └ TestLibrary.xml</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">├ obj/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">....</span></span></span></code></pre>\n<p>これで、Unity 側から自作の DLL を呼ぶことができます。<br>\n以上で全ての目標を達成しました。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<p><a href=\"https://blog.ariari.biz/2018/03/17/post-72/\">Mac 版 Visual Studio で Unity 用の DLL を出力する方法</a><br>\n<a href=\"https://qiita.com/lainzero/items/27681ddc96638e33758b\">Visual Studio ユーザーが Release ビルドをするときに必ずやってほしい 2 つの設定</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"VisualStudio for MacでUnity用のDLLを作成する","postdate":"2021/01/31 (00:02)","update":null,"tags":["CSharp","Unity","VisualStudio"]}},"previous":null,"next":{"fields":{"slug":"/blog/2021/cs-compars/"},"frontmatter":{"title":"[C#] 比較の定義 (IComparable, IComparer, Comparison, Comparer)"}}},"pageContext":{"id":"5a0f176c-c59b-54ca-aedf-0b79ac771105","previousPostId":null,"nextPostId":"f46fa483-f348-5f12-97c0-d921a7416c4a"}},"staticQueryHashes":["1334514254","1725242874"]}