{"version":3,"file":"component---src-templates-tag-page-js-a8797fd9a91562cd65de.js","mappings":"gLAiEA,UA3DqB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,EAAO,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACdC,EAAO,kBAAO,qBAAGD,MAAO,CAAEE,MAAO,UAAWC,aAAc,MAASJ,EAAKK,YAAYC,WACpFC,EAAQ,kBACZ,sBAAIN,MAAO,CAAEO,OAAQ,MACnB,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKW,OAAOC,KAAMC,SAAS,MAAMZ,MAAO,CAAEE,MAAO,YACzD,wBAAMU,SAAS,YAAab,EAAKK,YAAYS,OAASd,EAAKW,OAAOC,SAIlEG,EAAM,kBACV,qBAAGd,MAAO,CAAEe,QAAS,OAAQC,eAAgB,aAC1CjB,EAAKK,YAAYa,MAASlB,EAAKK,YAAYa,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACnD,wBAAMpB,MAAO,CACXqB,gBAAiB,UACjBC,aAAc,MACdC,QAAS,cACTC,WAAY,UACXC,IAAKL,GACN,gBAAC,EAAAZ,KAAD,CAAMC,GAAE,aAAeU,EAAOnB,MAAO,CAAEE,MAAO,YAA9C,IAA8DiB,EAA9D,WAKR,OACE,uBAAKO,WAAS,EAACC,SAAS,4BAA4B3B,MAAOA,GACzD,gBAACC,EAAD,MACA,gBAACK,EAAD,MACA,gBAACQ,EAAD,QAKAc,EAAUhC,EAAKiC,kBAAkBC,MAAM,GAAG1B,YAAYa,KAC5D,OACE,gBAAC,IAAD,CAAQpB,SAAUA,GAChB,gBAAC,IAAD,CAAKgB,MAAK,QAAUe,IACpB,0BAAKA,GACL,yBAAIhC,EAAKiC,kBAAkBE,WAA3B,KACA,yBAAG,gBAAC,EAAAvB,KAAD,CAAMC,GAAG,aAAT,UACF,uBAAKT,MAAO,CACXe,QAAS,OACTiB,SAAU,SACVX,gBAAiB,UACjBY,OAAQ,oBACRV,QAAS,WAGP3B,EAAKiC,kBAAkBC,MAAMZ,KAAI,SAACnB,EAAMqB,GAEtC,OAAIA,GAAKxB,EAAKiC,kBAAkBC,MAAMI,OAAQ,EAAU,gBAACpC,EAAD,CAAMC,KAAMA,EAAM0B,IAAKL,IACxE,gBAACtB,EAAD,CAAMC,KAAMA,EAAMC,MAAO,CAAEmC,aAAc,qBAAuBV,IAAKL","sources":["webpack://gatsby-starter-blog/./src/templates/tagPage.js"],"sourcesContent":["import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst TagsTemplate = ({ data, location }) => {\n  const Card = ({ post, style }) => {\n    const Date = () => (<p style={{ color: '#747474', marginBottom: '0' }}>{ post.frontmatter.postdate }</p>)\n    const Title = () => (\n      <h3 style={{ margin: '0' }}>\n        <Link to={post.fields.slug} itemProp=\"url\" style={{ color: '#242424' }}>\n          <span itemProp=\"headline\">{ post.frontmatter.title || post.fields.slug }</span>\n        </Link>\n      </h3>\n    )\n    const Tag = () => (\n      <p style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        {post.frontmatter.tags && (post.frontmatter.tags.map((tag, i)=> (\n          <span style={{\n            backgroundColor: '#000000',\n            borderRadius: '2px',\n            padding: '0.3rem 1rem',\n            marginLeft: '0.3rem'\n          }} key={i}>\n            <Link to={`/blog/tag/${tag}`} style={{ color: '#ffffff' }}> { tag } </Link>\n          </span>\n        )))}\n      </p>\n    )\n    return (\n      <div itemScope itemType=\"http://schema.org/Article\" style={style}>\n        <Date />\n        <Title />\n        <Tag />\n      </div>\n    )\n  }\n\n  const tagName = data.allMarkdownRemark.nodes[0].frontmatter.tags\n  return (\n    <Layout location={location}>\n      <Seo title={`Tag: ${tagName}`} />\n      <h1>{tagName}</h1>\n      <p>{data.allMarkdownRemark.totalCount}件</p>\n      <p><Link to=\"/blog/tag\">タグの一覧</Link></p>\n      {<div style={{\n        display: 'flex',\n        flexFlow: 'column',\n        backgroundColor: '#ffffff',\n        border: 'solid 1px #999999',\n        padding: '0 10px',\n        }}>\n        {\n          data.allMarkdownRemark.nodes.map((post, i) => {\n            // 最後の一個以外ボーダーで区切り線を入れる\n            if (i >= data.allMarkdownRemark.nodes.length -1) return <Card post={post} key={i}/>\n            return <Card post={post} style={{ borderBottom: 'solid 1px #E3E3E3' }} key={i}/>\n          })\n        }\n      </div>}\n    </Layout>\n  )\n}\n\nexport default TagsTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostByTag(\n    $tag: String!\n  ) {\n    allMarkdownRemark(\n      filter: {frontmatter: {tags: {eq: $tag }}}\n      sort: {order: DESC, fields: frontmatter___postdate}\n    ) {\n      totalCount\n      nodes {\n        frontmatter {\n          title\n          postdate(formatString: \"YYYY/MM/DD\")\n          tags\n        }\n        fields {\n          slug\n        }\n      }\n   }\n }\n`\n"],"names":["data","location","Card","post","style","Date","color","marginBottom","frontmatter","postdate","Title","margin","Link","to","fields","slug","itemProp","title","Tag","display","justifyContent","tags","map","tag","i","backgroundColor","borderRadius","padding","marginLeft","key","itemScope","itemType","tagName","allMarkdownRemark","nodes","totalCount","flexFlow","border","length","borderBottom"],"sourceRoot":""}