{"version":3,"file":"component---src-pages-index-tsx-847df0ed8bb49203003e.js","mappings":"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","sources":["webpack://ryota2357/./src/pages/index.tsx"],"sourcesContent":["import { graphql, PageProps, Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Layout, ContentBlock } from \"../components/mod\";\nimport \"../style/pages/index.scss\";\n\nconst Index = ({ data }: PageProps<Queries.IndexPageQuery>) => (\n  <Layout id=\"index-page\">\n    <div className=\"top-profile\">\n      <StaticImage\n        src=\"../images/profile-pic.jpg\"\n        alt=\"profile-pic\"\n        style={{\n          position: \"relative\",\n          zIndex: \"1\",\n          width: \"200px\",\n          height: \"200px\",\n          borderRadius: \"50%\",\n        }}\n      />\n      <p className=\"name\">ryota2357</p>\n    </div>\n    <div className=\"content-blocks\">\n      <ContentBlock title=\"Affiliation\">\n        <ul>\n          <li key={1}>電気通信大学 情報理工学域 1年</li>\n          <li key={2}>電気通信大学MMA(サークル)</li>\n        </ul>\n      </ContentBlock>\n      <ContentBlock title=\"Blog\">\n        <div className=\"align-horizontal\">\n          <h3>タグ</h3>\n          <div className=\"item\">\n            {(() => {\n              let cnt = new Map<string, number>();\n              data.allMarkdownRemark.nodes.map((post) =>\n                post.frontmatter.tags?.map(\n                  (tag) => tag && cnt.set(tag, (cnt.get(tag) ?? 0) + 1)\n                )\n              );\n              return [...cnt.entries()]\n                .sort()\n                .sort((a, b) => b[1] - a[1])\n                .map((tag, index) => (\n                  <span style={{ paddingLeft: \"0.3rem\" }} key={index}>\n                    <Link to={`/blog/tag/${tag[0]}`}>\n                      {`${tag[0]}(${tag[1]})`}\n                    </Link>\n                  </span>\n                ));\n            })()}\n          </div>\n        </div>\n        <div className=\"align-horizontal\">\n          <h3>更新</h3>\n          <div className=\"item\">\n            <ul>\n              {data.allMarkdownRemark.nodes.slice(0, 7).map((post, index) => (\n                <li key={index}>\n                  <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </ContentBlock>\n      <ContentBlock title=\"Links\">\n        <ul>\n          <li>\n            <a href=\"https://twitter.com/95s7k84695a\">Twitter (@95s7k84695a)</a>\n          </li>\n          <li>\n            <a href=\"https://github.com/ryota2357\">Github (ryota2357)</a>\n          </li>\n          <li>\n            <a href=\"https://atcoder.jp/users/ryota2357\">AtCoder (ryota2357)</a>\n          </li>\n          <li>\n            <a href=\"https://unityroom.com/users/ryota2357\">\n              UnityRoom (ryota2357)\n            </a>\n          </li>\n        </ul>\n      </ContentBlock>\n    </div>\n  </Layout>\n);\n\nexport default Index;\n\nexport const query = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___update }) {\n      nodes {\n        frontmatter {\n          title\n          tags\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["cnt","data","_jsxs","Layout","id","className","_jsx","StaticImage","src","alt","style","position","zIndex","width","height","borderRadius","ContentBlock","title","Map","allMarkdownRemark","nodes","map","post","frontmatter","tags","_post$frontmatter$tag","tag","set","get","_toConsumableArray","entries","sort","a","b","index","paddingLeft","Link","to","slice","fields","slug","href"],"sourceRoot":""}